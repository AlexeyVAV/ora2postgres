['OWNER' 'TABLE_NAME'
 'COLUMN_NAME'
 'DATA_TYPE' 'DATA_LENGTH'
 'DEFAULT_LENGTH']

names=['OWNER','TABLE_NAME','COLUMN_NAME','DATA_TYPE','DATA_LENGTH','DEFAULT_LENGTH']

-- source_load function save 2018-01-08
def source_load(source_file):
    # example = pd.read_csv(myfile,sep='\t',skiprows=(0,1,2),header=(0))
    # df = pd.read_csv(source_file,sep='\t',skiprows=(0,1,2,3,4,5,6,7,9),header=(0))
    #df = pd.read_csv(source_file, sep=',', skiprows=(0, 1, 2, 3, 4, 5, 6, 7,8,10), header=(0),skipinitialspace=True)
    #print(df.columns.values)

    # pandas approach
    # the line below is working
    #df = pd.read_csv(source_file, sep=',', skiprows=(0, 1, 2, 3, 4, 5, 6), skipinitialspace=True, names=['OWNER','TABLE_NAME','COLUMN_NAME','DATA_TYPE','DATA_LENGTH','DEFAULT_LENGTH'])
    #print(df.head())

    with open(source_file, 'r') as f:
        print_flag = 0
        table_name = ''
        for line in f:
            #line = f.readline()

            if line[0:10] == '----------':
                print_flag = 1
            elif len(line) == 1:
                print_flag = 0

            if print_flag == 1:
                #print(table_name,line.strip().split(',')[1:2])
                #print(table_name)

                if table_name != line.strip().split(',')[1:2]:
                    table_name = line.strip().split(',')[1:2]
                    #print (table_name,line.strip().split(',')[:])
                    print('CREATE TABLE {}.{} ( {}'.format(line.strip().split(',')[0:1],line.strip().split(',')[1:2],line.strip().split(',')[2:3]))
                    #sys.stdout.write('CREATE TABLE {}.{} ( {}'.format(line.strip().split(',')[0:1],line.strip().split(',')[1:2],line.strip().split(',')[2:3]))
                else:
                    print(table_name,line.strip().split(',')[:])

                #if table_name == line.strip().split(',')[1:2]:
                #    #print (table_name)
                #else:
                #    table_name = line.strip().split(',')[1:2]
                #    print (table_name)

                #print('CREATE TABLE {}.{} (')
--
-- Working example
def source_load(source_file):

    with open(source_file, 'r') as f:

        print_flag = 0
        table_name = ''

        for line in f:

            if line[0:10] == '----------':
                print_flag = 1
            elif len(line) == 1:
                print_flag = 0

            _line = line.strip().split(',')
            #print(_line[0][0:10])

            if print_flag == 1 and _line[0][0:10] != '----------':
                #print(table_name,line.strip().split(',')[1:2])
                #print(table_name)

                if table_name != _line[1]:
                    table_name = _line[1]
                    #print (table_name,line.strip().split(',')[:])
                    #    #line.strip().split(',')[0:1],\
                    print('CREATE TABLE {}.{} ( {} {}({})'.format( \
                        _line[0], \
                        _line[1],\
                        _line[2],\
                        _line[3],\
                        _line[4]
                        )
                    )
                else:
                    print(_line)

                #if table_name == line.strip().split(',')[1:2]:
                #    #print (table_name)
                #else:
                #    table_name = line.strip().split(',')[1:2]
                #    print (table_name)

                #print('CREATE TABLE {}.{} (')
--